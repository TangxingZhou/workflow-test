{"uid":"1c7ede47dab16ddb","name":"Upgrade New MO Cluster","fullName":"src.tests.upgrade.test_mo_upgrade.UpgradeMOTestSuite#test_upgrade_mo_root_cluster","historyId":"47226bdbe0a100462eb8228169485eb9","time":{"start":1710916631444,"stop":1710916632807,"duration":1363},"description":"This test attempts to upgrade cluster newly created.","descriptionHtml":"<p>This test attempts to upgrade cluster newly created.</p>\n","status":"failed","statusMessage":"AssertionError: Container named 'main' of pod 'default-cn-nm9nt': expected image is registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17 rather than docker.io/matrixorigin/matrixone:1.1.1-fix.\nassert 'docker.io/ma...one:1.1.1-fix' == 'registry.cn-...ae-2024-03-17'\n  - registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17\n  + docker.io/matrixorigin/matrixone:1.1.1-fix","statusTrace":"self = <src.tests.upgrade.test_mo_upgrade.UpgradeMOTestSuite object at 0x7010827e4f10>\nconfigs = {'cluster': {'imageRepository': {'from': 'docker.io/matrixorigin/matrixone', 'to': 'registry.cn-hangzhou.aliyuncs.com/... 'cluster': {'name': 'restore-freetier-01', 'version': '1.1.1-fix'}, 'dir': 's3', ...}}, 'timestamp': '20240320063708'}\nupgrade_version_is_specified = True, root_cluster_is_active = True\n\n    @pytest.mark.p0\n    @pytest.mark.dependency(depends=[\"UpgradeMOTestSuite::test_create_mo_root_cluster\"])\n    @allure.title(\"Upgrade New MO Cluster\")\n    @allure.description(\"This test attempts to upgrade cluster newly created.\")\n    @allure.tag(\"MO\", \"Upgrade\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.label(\"owner\", \"TangxingZhou\")\n    # @allure.link(\"https://github.com/matrixorigin/MO-Cloud/issues\", name=\"GitHub\")\n    @allure.issue(\"https://github.com/matrixorigin/MO-Cloud/issues/2542\", name='issue-2542')\n    # @allure.testcase(\"https://github.com/matrixorigin/MO-Cloud/issues/2542\", name='TC-2542')\n    def test_upgrade_mo_root_cluster(self, configs, upgrade_version_is_specified, root_cluster_is_active):\n        # 配置了升级版本号才进行升级操作，否则跳过当前用例\n        if upgrade_version_is_specified:\n            if root_cluster_is_active:\n                upgrade_image = f\"{configs['cluster']['imageRepository']['to']}:{configs['cluster']['version']['to']}\"\n                body = {\n                    'spec': {\n                        'version': configs['cluster']['version']['to'],\n                        'endpoint': {\n                            'proxySpec': {\n                                'image': upgrade_image\n                            }\n                        },\n                        'managed': {\n                            'imageRepository': f\"{configs['cluster']['imageRepository']['to']}\"\n                        }\n                    }\n                }\n                with allure.step(\"升级集群内核版本\"):\n                    root_cluster = self.k8s_controller_client.core_matrixone_cloud_v1alpha1_api.patch_cluster(\n                        configs['cluster']['name'], body)\n                    assert root_cluster[1] == 200, f\"Failed to patch root cluster '{configs['cluster']['name']}'.\"\n                # TODO: to check pods images updated and run normally\n                with allure.step(\"等待集群内核版本升级成功\"):\n                    for pod in self.k8s_unit_client.v1_api.list_namespaced_pod(configs['cluster']['name']).items:\n                        for container in pod.spec.containers:\n                            if container.name == 'main':\n>                               assert container.image == f\"{upgrade_image}\", \\\n                                    (f\"Container named 'main' of pod '{pod.metadata.name}': \"\n                                     f\"expected image is {upgrade_image} rather than {container.image}.\")\nE                               AssertionError: Container named 'main' of pod 'default-cn-nm9nt': expected image is registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17 rather than docker.io/matrixorigin/matrixone:1.1.1-fix.\nE                               assert 'docker.io/ma...one:1.1.1-fix' == 'registry.cn-...ae-2024-03-17'\nE                                 - registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17\nE                                 + docker.io/matrixorigin/matrixone:1.1.1-fix\n\nsrc/tests/upgrade/test_mo_upgrade.py:645: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"k8s_controller_client","time":{"start":1710916628860,"stop":1710916628869,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"k8s_unit_client","time":{"start":1710916628869,"stop":1710916628878,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_module","time":{"start":1710916628878,"stop":1710916628878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_xunit_setup_module_fixture_src.tests.upgrade.test_mo_upgrade","time":{"start":1710916628878,"stop":1710916628878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"envs","time":{"start":1710916628879,"stop":1710916628879,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"configs","time":{"start":1710916628879,"stop":1710916628883,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_xunit_setup_class_fixture_UpgradeMOTestSuite","time":{"start":1710916628931,"stop":1710916628931,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_class","time":{"start":1710916628931,"stop":1710916630266,"duration":1335},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"root_cluster_is_active","time":{"start":1710916631202,"stop":1710916631443,"duration":241},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"upgrade_version_is_specified","time":{"start":1710916631202,"stop":1710916631202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"This test attempts to upgrade cluster newly created.","status":"failed","statusMessage":"AssertionError: Container named 'main' of pod 'default-cn-nm9nt': expected image is registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17 rather than docker.io/matrixorigin/matrixone:1.1.1-fix.\nassert 'docker.io/ma...one:1.1.1-fix' == 'registry.cn-...ae-2024-03-17'\n  - registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17\n  + docker.io/matrixorigin/matrixone:1.1.1-fix","statusTrace":"self = <src.tests.upgrade.test_mo_upgrade.UpgradeMOTestSuite object at 0x7010827e4f10>\nconfigs = {'cluster': {'imageRepository': {'from': 'docker.io/matrixorigin/matrixone', 'to': 'registry.cn-hangzhou.aliyuncs.com/... 'cluster': {'name': 'restore-freetier-01', 'version': '1.1.1-fix'}, 'dir': 's3', ...}}, 'timestamp': '20240320063708'}\nupgrade_version_is_specified = True, root_cluster_is_active = True\n\n    @pytest.mark.p0\n    @pytest.mark.dependency(depends=[\"UpgradeMOTestSuite::test_create_mo_root_cluster\"])\n    @allure.title(\"Upgrade New MO Cluster\")\n    @allure.description(\"This test attempts to upgrade cluster newly created.\")\n    @allure.tag(\"MO\", \"Upgrade\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.label(\"owner\", \"TangxingZhou\")\n    # @allure.link(\"https://github.com/matrixorigin/MO-Cloud/issues\", name=\"GitHub\")\n    @allure.issue(\"https://github.com/matrixorigin/MO-Cloud/issues/2542\", name='issue-2542')\n    # @allure.testcase(\"https://github.com/matrixorigin/MO-Cloud/issues/2542\", name='TC-2542')\n    def test_upgrade_mo_root_cluster(self, configs, upgrade_version_is_specified, root_cluster_is_active):\n        # 配置了升级版本号才进行升级操作，否则跳过当前用例\n        if upgrade_version_is_specified:\n            if root_cluster_is_active:\n                upgrade_image = f\"{configs['cluster']['imageRepository']['to']}:{configs['cluster']['version']['to']}\"\n                body = {\n                    'spec': {\n                        'version': configs['cluster']['version']['to'],\n                        'endpoint': {\n                            'proxySpec': {\n                                'image': upgrade_image\n                            }\n                        },\n                        'managed': {\n                            'imageRepository': f\"{configs['cluster']['imageRepository']['to']}\"\n                        }\n                    }\n                }\n                with allure.step(\"升级集群内核版本\"):\n                    root_cluster = self.k8s_controller_client.core_matrixone_cloud_v1alpha1_api.patch_cluster(\n                        configs['cluster']['name'], body)\n                    assert root_cluster[1] == 200, f\"Failed to patch root cluster '{configs['cluster']['name']}'.\"\n                # TODO: to check pods images updated and run normally\n                with allure.step(\"等待集群内核版本升级成功\"):\n                    for pod in self.k8s_unit_client.v1_api.list_namespaced_pod(configs['cluster']['name']).items:\n                        for container in pod.spec.containers:\n                            if container.name == 'main':\n>                               assert container.image == f\"{upgrade_image}\", \\\n                                    (f\"Container named 'main' of pod '{pod.metadata.name}': \"\n                                     f\"expected image is {upgrade_image} rather than {container.image}.\")\nE                               AssertionError: Container named 'main' of pod 'default-cn-nm9nt': expected image is registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17 rather than docker.io/matrixorigin/matrixone:1.1.1-fix.\nE                               assert 'docker.io/ma...one:1.1.1-fix' == 'registry.cn-...ae-2024-03-17'\nE                                 - registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17\nE                                 + docker.io/matrixorigin/matrixone:1.1.1-fix\n\nsrc/tests/upgrade/test_mo_upgrade.py:645: AssertionError","steps":[{"name":"升级集群内核版本","time":{"start":1710916631444,"stop":1710916631696,"duration":252},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"等待集群内核版本升级成功","time":{"start":1710916631696,"stop":1710916632807,"duration":1111},"status":"failed","statusMessage":"AssertionError: Container named 'main' of pod 'default-cn-nm9nt': expected image is registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17 rather than docker.io/matrixorigin/matrixone:1.1.1-fix.\nassert 'docker.io/ma...one:1.1.1-fix' == 'registry.cn-...ae-2024-03-17'\n  - registry.cn-hangzhou.aliyuncs.com/mocloud/matrixone:v1.1.2-pre-afb4934ae-2024-03-17\n  + docker.io/matrixorigin/matrixone:1.1.1-fix\n","statusTrace":"  File \"/home/runner/work/workflow-test/workflow-test/src/tests/upgrade/test_mo_upgrade.py\", line 645, in test_upgrade_mo_root_cluster\n    assert container.image == f\"{upgrade_image}\", \\\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"18d3155fc99cec42","name":"log","source":"18d3155fc99cec42.txt","type":"text/plain","size":154620}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"_xunit_setup_class_fixture_UpgradeMOTestSuite::0","time":{"start":1710916635110,"stop":1710916635110,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_xunit_setup_module_fixture_src.tests.upgrade.test_mo_upgrade::0","time":{"start":1710916635111,"stop":1710916635111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"Upgrade"},{"name":"epic","value":"MOC Test Automation"},{"name":"suite","value":"Restore MO Cluster and Upgrade"},{"name":"severity","value":"minor"},{"name":"owner","value":"TangxingZhou"},{"name":"feature","value":"Backup/Restore and Upgrade MO Cluster"},{"name":"story","value":"Backup/Restore and Upgrade MO Cluster"},{"name":"tag","value":"MO"},{"name":"tag","value":"dependency(depends=['UpgradeMOTestSuite::test_create_mo_root_cluster'])"},{"name":"tag","value":"p0"},{"name":"parentSuite","value":"src.tests.upgrade"},{"name":"subSuite","value":"UpgradeMOTestSuite"},{"name":"host","value":"fv-az732-311"},{"name":"thread","value":"2197-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.upgrade.test_mo_upgrade"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"issue-2542","url":"https://github.com/matrixorigin/MO-Cloud/issues/2542","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"minor","owner":"TangxingZhou","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":9,"passed":0,"unknown":0,"total":10},"items":[{"uid":"fab582da0a4c5c56","reportUrl":"https://TangxingZhou.github.io/workflow-test/47//#testresult/fab582da0a4c5c56","status":"skipped","statusDetails":"Skipped: test_upgrade_mo_root_cluster depends on UpgradeMOTestSuite::test_create_mo_root_cluster","time":{"start":1710825560918,"stop":1710825560918,"duration":0}},{"uid":"5fdeee6bb07f7ea7","reportUrl":"https://TangxingZhou.github.io/workflow-test/47//#testresult/5fdeee6bb07f7ea7","status":"skipped","statusDetails":"Skipped: test_upgrade_mo_root_cluster depends on UpgradeMOTestSuite::test_create_mo_root_cluster","time":{"start":1710824761312,"stop":1710824761312,"duration":0}},{"uid":"b9f2bfc0eed30d5f","reportUrl":"https://TangxingZhou.github.io/workflow-test/46//#testresult/b9f2bfc0eed30d5f","status":"skipped","statusDetails":"Skipped: test_upgrade_mo_root_cluster depends on UpgradeMOTestSuite::test_create_mo_root_cluster","time":{"start":1710820925800,"stop":1710820925800,"duration":0}},{"uid":"b0c5ff89f5adc66c","reportUrl":"https://TangxingZhou.github.io/workflow-test/46//#testresult/b0c5ff89f5adc66c","status":"skipped","statusDetails":"Skipped: test_upgrade_mo_root_cluster depends on UpgradeMOTestSuite::test_create_mo_root_cluster","time":{"start":1710818353643,"stop":1710818353643,"duration":0}},{"uid":"10eff17142e4107e","reportUrl":"https://TangxingZhou.github.io/workflow-test/45//#testresult/10eff17142e4107e","status":"skipped","statusDetails":"Skipped: test_upgrade_mo_root_cluster depends on UpgradeMOTestSuite::test_create_mo_root_cluster","time":{"start":1710773297750,"stop":1710773297750,"duration":0}},{"uid":"93c13ee9ce292126","reportUrl":"https://TangxingZhou.github.io/workflow-test/45//#testresult/93c13ee9ce292126","status":"skipped","statusDetails":"Skipped: test_upgrade_mo_root_cluster depends on UpgradeMOTestSuite::test_create_mo_root_cluster","time":{"start":1710769711020,"stop":1710769711020,"duration":0}},{"uid":"753f45d0eaffec08","reportUrl":"https://TangxingZhou.github.io/workflow-test/45//#testresult/753f45d0eaffec08","status":"skipped","statusDetails":"Skipped: test_upgrade_mo_root_cluster depends on UpgradeMOTestSuite::test_create_mo_root_cluster","time":{"start":1710768735047,"stop":1710768735047,"duration":0}},{"uid":"fcfff4e28ad493a0","reportUrl":"https://TangxingZhou.github.io/workflow-test/44//#testresult/fcfff4e28ad493a0","status":"skipped","statusDetails":"Skipped: test_upgrade_mo_root_cluster depends on UpgradeMOTestSuite::test_create_mo_root_cluster","time":{"start":1710474267272,"stop":1710474267272,"duration":0}},{"uid":"9c97d6b1e27c1e85","reportUrl":"https://TangxingZhou.github.io/workflow-test/42//#testresult/9c97d6b1e27c1e85","status":"skipped","statusDetails":"Skipped: test_upgrade_mo_root_cluster depends on UpgradeMOTestSuite::test_create_mo_root_cluster","time":{"start":1710252679692,"stop":1710252679692,"duration":0}}]},"tags":["p0","MO","dependency(depends=['UpgradeMOTestSuite::test_create_mo_root_cluster'])","Upgrade"]},"source":"1c7ede47dab16ddb.json","parameterValues":[]}