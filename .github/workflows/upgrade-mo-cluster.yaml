name:  Backup/Restore and Upgrade MO Cluster

on:
#   schedule:
#     - cron: '0 2 * * *'

  workflow_dispatch:
    inputs:
      action:
        description: The action to perform.
        required: true
        type: choice
        options:
          - backup
          - restore
        default: restore
      backup_cluster:
        description: Backups to be made for the cluster.
        required: false
        type: string
        default: freetier-02
      backup_cluster_version:
        description: The cluster version for CN that performs the backup job.
        required: false
        type: string
        default: nightly-e94ba155
      backup_s3_bucket:
        description: Backups to be made into the S3 bucket.
        required: false
        type: string
        default: 'moc-backup-test'
      backup_s3_bucket_file_path:
        description: Backups to be made into the S3 bucket path.
        required: false
        type: string
      restore_cluster:
        description: The cluster to be restored.
        required: false
        type: string
        default: restore-freetier-02
      restore_cluster_version:
        description: The cluster version to be restored.
        required: false
        type: string
        # default: 'nightly-9d616832a'
      restore_s3_bucket:
        description: The S3 bucket to restore.
        required: false
        type: string
        default: 'moc-backup-test'
      restore_s3_bucket_file_path:
        description: The S3 bucket path to restore.
        required: false
        type: string
      upgrade_cluster_version:
        description: The target version to upgrade.
        required: false
        type: string
        default: 'nightly-9d616832b'

jobs:
  backup:
    if: ${{ inputs.action == 'backup' }}
    runs-on: ubuntu-latest
    environment:
      name: qa

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: matrixone-cloud/mocloud-tester
          ref: qa-txzhou
          token: ${{ secrets.GH_PAT }}

      - name: Set Up Python3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install Python Dependencies
        run: |
          cd $GITHUB_WORKSPACE
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests Case
        run: |
          cd $GITHUB_WORKSPACE
          pytest src/tests/upgrade/test_mo_upgrade.py::BackupMOTestSuite --alluredir=./allure-results
        env:
          email: ${{ secrets.EMAIL }}
          password: ${{ secrets.PASSWORD }}
          database_platform_password: ${{ secrets.DATABASE_PLATFORM_PASSWORD }}
          env: qa
          provider: aliyun
          region: cn-hangzhou
          k8s_unit_config: ${{ secrets.K8S_UNIT_CONFIG }}
          k8s_controller_config: ${{ secrets.K8S_CONTROLLER_CONFIG }}
          ALIYUN_AK: ${{ secrets.ALIYUN_AK }}
          ALIYUN_SK: ${{ secrets.ALIYUN_SK }}
          BACKUP_CLUSTER: ${{ inputs.backup_cluster }}
          BACKUP_CLUSTER_VERSION: ${{ inputs.backup_cluster_version }}
          BACKUP_S3_BUCKET: ${{ inputs.backup_s3_bucket }}
          BACKUP_S3_BUCKET_FILE_PATH: ${{ inputs.backup_s3_bucket_file_path }}

      - name: Archive allure-results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: |
            allure-results

      - run: |
          ls -l
          pwd
          ls -l $GITHUB_WORKSPACE

      - name: Load Test Report History
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: upgrade-reports
          path: allure-reports

      - name: Build Test Report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: allure-reports
          allure_history: allure-history
          allure_results: moc-tester/allure-results
          keep_reports: 50

      - name: Publish Test Report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: upgrade-reports
          publish_dir: allure-history

  restore-and-upgrade:
    if: ${{ inputs.action == 'restore' }}
    # needs: backup
    runs-on: ubuntu-latest
    environment:
      name: qa

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: matrixone-cloud/mocloud-tester
          ref: qa-txzhou
          token: ${{ secrets.GH_PAT }}

      - name: Set Up Python3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install Python Dependencies
        run: |
          cd $GITHUB_WORKSPACE
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests Case
        run: |
          cd $GITHUB_WORKSPACE
          pytest src/tests/upgrade/test_mo_upgrade.py::UpgradeMOTestSuite --alluredir=./allure-results
        env:
          email: ${{ secrets.EMAIL }}
          password: ${{ secrets.PASSWORD }}
          database_platform_password: ${{ secrets.DATABASE_PLATFORM_PASSWORD }}
          env: qa
          provider: aliyun
          region: cn-hangzhou
          k8s_unit_config: ${{ secrets.K8S_UNIT_CONFIG }}
          k8s_controller_config: ${{ secrets.K8S_CONTROLLER_CONFIG }}
          ALIYUN_AK: ${{ secrets.ALIYUN_AK }}
          ALIYUN_SK: ${{ secrets.ALIYUN_SK }}
          BACKUP_S3_BUCKET: ${{ inputs.backup_s3_bucket }}
          BACKUP_S3_BUCKET_FILE_PATH: ${{ inputs.backup_s3_bucket_file_path }}
          RESTORE_CLUSTER: ${{ inputs.restore_cluster }}
          RESTORE_CLUSTER_VERSION: ${{ inputs.restore_cluster_version }}
          RESTORE_ROOT_USERNAME: ${{ secrets.restore_root_username }}
          RESTORE_ROOT_PASSWORD: ${{ secrets.restore_root_password }}
          RESTORE_S3_BUCKET: ${{ inputs.restore_s3_bucket }}
          RESTORE_S3_BUCKET_FILE_PATH: ${{ inputs.restore_s3_bucket_file_path }}
          UPGRADE_CLUSTER_VERSION: ${{ inputs.upgrade_cluster_version }}

      - name: Load Test Report History
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: upgrade-reports
          path: allure-reports

      - name: Build Test Report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: allure-reports
          allure_history: allure-history
          allure_results: moc-tester/allure-results
          keep_reports: 50

      - name: Publish Test Report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: upgrade-reports
          publish_dir: allure-history
