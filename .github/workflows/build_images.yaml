# https://github.com/matrixorigin/matrixone/blob/main/.github/workflows/image-build.yml
name:  Build and Push Images

on:
#   schedule:
#     - cron: '0 22 * * *'
#   release:
#     types:
#       - published
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  mo-backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
            repository: matrixorigin/mo-backup
            ref: main
            token: ${{ secrets.GH_PAT }}
            # fetch-depth: 0
          
      - name: Prepare
        id: prep
        run: |
          TAGS="registry.cn-hangzhou.aliyuncs.com/yidao-test/mo-backup:old"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          git checkout 77f46ce7d55cd4835fa78bb120c8f77bdfb36551
          git status

      - name: Get image info
        run: |
          echo image-tags: ${{ steps.prep.outputs.tags }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses:  docker/setup-buildx-action@v3

    #   - name: Login to DockerHub
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{ secrets.DOCKERHUB_USERNAME }}
    #       password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Alicloud Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
#   release:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: login to aliyun acr
#         uses: aliyun/acr-login@v1
#         with:
#           login-server: registry.cn-hangzhou.aliyuncs.com
#           username: "${{ secrets.ALIYUN_DOCKER_USER }}"
#           password: "${{ secrets.ALIYUN_DOCKER_PASSWORD }}"
#           region-id: cn-hangzhou

#       - name: set up docker buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1

#       - name: docker meta
#         id: meta
#         uses: docker/metadata-action@v4
#         with:
#           images: registry.cn-hangzhou.aliyuncs.com/ack-cos/cos-inspector
#           tags: |
#             type=sha
#             type=ref,event=branch,suffix=-{{date 'YYYYMMDD'}}
#             type=semver,pattern={{version}}

#       - name: build and push
#         uses: docker/build-push-action@v2
#         with:
#           builder: ${{ steps.buildx.outputs.name }}
#           context: .
#           secrets: "github=${{ secrets.MY_GIT_TOKEN }}"
#           file: Dockerfile
#           platforms: linux/amd64
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
