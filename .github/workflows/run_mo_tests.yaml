name: Run MO Tests

on:
  workflow_dispatch:
    inputs:
      testName:
        description: What tests to perform
        type: choice
        required: true
        options:
          - all
          - tpch
          - tpcc
          - sysbench
          - bigdata
          - scale
        default: all
      mo-host:
        description: Host for mo instance
        required: true
        type: string
      mo-port:
        description: Port for mo instance
        required: false
        type: number
        default: 6001
      mo-user:
        description: User name of mo instance
        required: true
        type: string
        default: dump
      mo-password:
        description: Password of mo instance
        required: true
        type: string
        default: Admin123
      period:
        description: Period of time to run tests (mins or times)
        required: true
        type: number
        default: 5
      run-tests:
        description: Run mo tests
        required: true
        type: boolean
        default: true
jobs:
  run-sysbench-tests:
    runs-on: ubuntu-latest
    environment:
      name: qa
    if: inputs.testName == 'all' || inputs.testName == 'sysbench'
    steps:
      - name: Checkout mo-load
        uses: actions/checkout@v4
        with:
          repository: matrixorigin/mo-load
          ref: main
          path: mo-load
          token: ${{ secrets.GH_PAT }}

      - name: Set Up Java1.8
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8

      - uses: ConorMacBride/install-package@v1
        with:
          apt: mysql-client

      - name: Run Sysbench Tests
        run: |
          cd $GITHUB_WORKSPACE/mo-load
          echo "$(date '+%Y-%m-%d %T') - Create database '$DATABASE' for sysbench tests"
          mysql \
          -h ${{ inputs.mo-host }} \
          -P ${{ inputs.mo-port }} \
          -u ${{ inputs.mo-user }} \
          -p${{ inputs.mo-password }} \
          -e "drop database if exists $DATABASE; create database if not exists $DATABASE;"
          echo "$(date '+%Y-%m-%d %T') - Prepare data for sysbench tests"
          ./start.sh \
          -m SYSBENCH \
          -n 10 \
          -s 100000 \
          -h ${{ inputs.mo-host }} \
          -P ${{ inputs.mo-port }} \
          -u ${{ inputs.mo-user }} \
          -p ${{ inputs.mo-password }} \
          -b $DATABASE
          if [ ${{ inputs.run-tests }} = 'true' ]; then
            echo "$(date '+%Y-%m-%d %T') - Start to run sysbench tests"
            ./start.sh \
            -c cases/sysbench/mixed_10_100000/ \
            -t 10 \
            -d ${{ inputs.period }} \
            -h ${{ inputs.mo-host }} \
            -P ${{ inputs.mo-port }} \
            -u ${{ inputs.mo-user }} \
            -p ${{ inputs.mo-password }} \
            -b $DATABASE \
            -g > sysbench.log 2>&1
            echo "$(date '+%Y-%m-%d %T') - Complete to run sysbench tests"
          fi
        env:
          DATABASE: sysbench

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sysbench-test-logs
          path: |
            ${{ github.workspace }}/mo-load/*.log
            ${{ github.workspace }}/mo-load/report/
          retention-days: 7

  run-tpcc-tests:
    runs-on: ubuntu-latest
    environment:
      name: qa
    if: inputs.testName == 'all' || inputs.testName == 'tpcc'
    steps:
      - name: Checkout mo-load-data
        uses: actions/checkout@v4
        with:
          repository: matrixorigin/mo-load-data
          ref: main
          path: mo-load-data
          token: ${{ secrets.GH_PAT }}

      - uses: ConorMacBride/install-package@v1
        with:
          apt: mysql-client

      - name: Load TPCC Data
        run: |
          cd $GITHUB_WORKSPACE/mo-load-data
          sed -i \
          -e 's/\(ENDPOINT:\).*/\1 oss-cn-hangzhou-internal.aliyuncs.com/' \
          -e 's/\(ACCESS_KEY_ID:\).*/\1 ${{ secrets.RESTORE_ALIYUN_AK }}/' \
          -e 's/\(SECRET_ACCESS_KEY:\).*/\1 ${{ secrets.RESTORE_ALIYUN_SK }}/' \
          access.yml
          ./load.sh \
          -c cases/00_from_s3/tpcc_10 -d tpcc_10 -m -r \
          -b moc-test-data \
          -h ${{ inputs.mo-host }} \
          -P ${{ inputs.mo-port }} \
          -u ${{ inputs.mo-user }} \
          -p ${{ inputs.mo-password }} \
          2>&1 | tee load-tpcc-data.log

      - name: Checkout mo-tpcc
        uses: actions/checkout@v3
        with:
          repository: matrixorigin/mo-tpcc
          ref: main
          path: mo-tpcc
          token: ${{ secrets.GH_PAT }}

      - name: Set Up Java1.8
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8

      - name: Run TPCC Tests
        if: inputs.run-tests
        run: |
          cd $GITHUB_WORKSPACE/mo-tpcc
          cp props.mo props_10.mo
          sed -i 's/socketTimeout=60000/socketTimeout=60000/' props_10.mo
          sed -i '/.*terminals=*/c\terminals=10' props_10.mo
          sed -i '/.*warehouses=*/c\warehouses=10' props_10.mo
          sed -i '/.*user=*/c\user=${{ inputs.mo-user }}' props_10.mo
          sed -i "/.*password=*/c\password=${{ inputs.mo-password }}" props_10.mo
          sed -i '/runMins=*/c\runMins=${{ inputs.period }}' props_10.mo
          sed -i 's/tpcc/tpcc_10/g' props_10.mo
          sed -i 's/127.0.0.1/${{ inputs.mo-host }}/g' props_10.mo
          ./runBenchmark.sh props_10.mo
          ./runVerify.sh props_10.mo

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: load-tpcc-data-logs
          path: |
            ${{ github.workspace }}/mo-load-data/*.log
            ${{ github.workspace }}/mo-load-data/report/
            ${{ github.workspace }}/mo-tpcc/*.log
            ${{ github.workspace }}/mo-tpcc/report/
          retention-days: 7

  run-tpch-tests:
    runs-on: ubuntu-latest
    environment:
      name: qa
    if: inputs.testName == 'all' || inputs.testName == 'tpch'
    steps:
      - name: Checkout mo-tpch
        uses: actions/checkout@v4
        with:
          repository: matrixorigin/mo-tpch
          ref: main
          path: mo-tpch
          token: ${{ secrets.GH_PAT }}

      - uses: ConorMacBride/install-package@v1
        with:
          apt: mysql-client

      - name: Run TPCH Tests
        run: |
          cd $GITHUB_WORKSPACE/mo-tpch
          echo "$(date '+%Y-%m-%d %T') - Create database '$DATABASE' for tpch tests"
          mysql \
          -h ${{ inputs.mo-host }} \
          -P ${{ inputs.mo-port }} \
          -u ${{ inputs.mo-user }} \
          -p${{ inputs.mo-password }} \
          -e "drop database if exists $DATABASE; create database $DATABASE from sys publication mo_sample_data_tpch_sf10;"
          if [ ${{ inputs.run-tests }} = 'true' ]; then
            echo "$(date '+%Y-%m-%d %T') - Start to run TPCH_10G tests"
            ./run.sh \
            -q all \
            -s 10 \
            -t ${{ inputs.period }} \
            -d $DATABASE \
            -h ${{ inputs.mo-host }} \
            -P ${{ inputs.mo-port }} \
            -u ${{ inputs.mo-user }} \
            -p ${{ inputs.mo-password }} \
            2>&1 | tee tpch.log
          fi
        env:
          DATABASE: mo_sample_data_tpch_sf10

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tpch-test-logs
          path: |
            ${{ github.workspace }}/mo-tpch/*.log
            ${{ github.workspace }}/mo-tpch/report/
          retention-days: 7

  run-bigdata-tests:
    runs-on: ubuntu-latest
    environment:
      name: qa
    timeout-minutes: 120
    if: inputs.testName == 'all' || inputs.testName == 'bigdata'
    steps:
      - uses: ConorMacBride/install-package@v1
        with:
          apt: mysql-client

      - name: Checkout mo-nightly-regression
        uses: actions/checkout@v4
        with:
          repository: matrixorigin/mo-nightly-regression
          ref: moc_big_data
          path: mo-nightly-regression
          token: ${{ secrets.GH_PAT }}

      - name: Set Up Python3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install Python Dependencies
        run: |
          cd $GITHUB_WORKSPACE/mo-nightly-regression/tools/mo-regression-test
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Load Data 1Y
        run: |
          cd $GITHUB_WORKSPACE/mo-nightly-regression/tools/mo-regression-test
          sed -i.bak \
          -e 's#\${ENDPOINT}#http://oss-cn-hangzhou-internal.aliyuncs.com#g' \
          -e 's/\${ACCESS_KEY_ID}/${{ secrets.RESTORE_ALIYUN_AK }}/g' \
          -e 's/\${SECRET_ACCESS_KEY}/${{ secrets.RESTORE_ALIYUN_SK }}/g' \
          -e 's/mo-load-guangzhou-1308875761/moc-test-data/g' \
          -e 's/mo-big-data/bigdata_1y/g' \
          cases/big_data_test/02_LOAD_DATA/01_load_basic_for_100M.sql
          mysql \
          -h ${{ inputs.mo-host }} \
          -P ${{ inputs.mo-port }} \
          -u ${{ inputs.mo-user }} \
          -p${{ inputs.mo-password }} \
          -e "drop database if exists big_data_test;drop database if exists ssb_100G;"
          echo "$(date '+%Y-%m-%d %T') - Create Database and Tables"
          python run.py \
          -H ${{ inputs.mo-host }} \
          -P ${{ inputs.mo-port }} \
          -u ${{ inputs.mo-user }} \
          -p ${{ inputs.mo-password }} \
          -c ./cases/big_data_test/01_CREATE_TABLE
          echo "$(date '+%Y-%m-%d %T') - Start to Load 1Y Data"
          python run.py \
          -H ${{ inputs.mo-host }} \
          -P ${{ inputs.mo-port }} \
          -u ${{ inputs.mo-user }} \
          -p ${{ inputs.mo-password }} \
          -c ./cases/big_data_test/02_LOAD_DATA/01_load_basic_for_100M.sql
          python run.py \
          -H ${{ inputs.mo-host }} \
          -P ${{ inputs.mo-port }} \
          -u ${{ inputs.mo-user }} \
          -p ${{ inputs.mo-password }} \
          -c ./cases/big_data_test/03_INSERT_SELECT/11_table_basic_for_alter_100M.sql

      - name: Write 1Y Test
        if: inputs.run-tests
        run: |
          cd $GITHUB_WORKSPACE/mo-nightly-regression/tools/mo-regression-test
          python run.py \
          -H ${{ inputs.mo-host }} \
          -P ${{ inputs.mo-port }} \
          -u ${{ inputs.mo-user }} \
          -p ${{ inputs.mo-password }} \
          -t ${{ inputs.period }} \
          -c ./cases/big_data_test/04_QUERIES/15_moc_write_100M.sql

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bigdata-test-logs
          path: |
            ${{ github.workspace }}/mo-nightly-regression/tools/mo-regression-test/*.log
            ${{ github.workspace }}/mo-nightly-regression/tools/mo-regression-test/report/
          retention-days: 7

  test-scale-job:
    if: inputs.testName == 'all' || inputs.testName == 'scale'
    runs-on: ubuntu-latest
    timeout-minutes: 70
    environment:
      name: dev
    steps:
      - name: Checkout mocloud-tester
        uses: actions/checkout@v3
        with:
          repository: matrixone-cloud/mocloud-tester
          ref: main

      - name: Echo github workspace
        run: |
          echo $GITHUB_WORKSPACE
          ls $GITHUB_WORKSPACE/

      - name: Set up Python3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Python Dependencies
        run: |
          cd $GITHUB_WORKSPACE
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Execute scale
        env:
          ApExecuteTime: 10
          ApWaitTime: 10
          ApExecuteCount: 1
        run: |
          cd $GITHUB_WORKSPACE
          python scale.py \
          -host ${{ inputs.mo-host }} \
          -u ${{ inputs.mo-user }} \
          -p ${{ inputs.mo-password }} \
          -rt 20 \
          -wt 10 \
          -ec ${{ inputs.period }} | tee scale.log 

      - name: Remove log to upload
        if: ${{ always() }}
        run: |
          cd $GITHUB_WORKSPACE
          mkdir upload
          mv $GITHUB_WORKSPACE/scale.log  $GITHUB_WORKSPACE/upload/

      - name: Upload Files
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-scale-report
          path:
            ${{ github.workspace }}/upload
          retention-days: 7
